\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}内容与要求}{2}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces 欧拉算法}}{2}{}\protected@file@percent }
\newlabel{alg:euclid}{{1}{2}{}{algorithm.1}{}}
\newlabel{euclidendwhile}{{6}{2}{}{algorithm.1}{}}
\citation{ctex}
\@writefile{toc}{\contentsline {section}{\numberline {2}问题背景}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}最小生成树问题定义}{3}{}\protected@file@percent }
\citation{mst_wiki}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}最小生成树的应用场景}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces 最小生成树示例：左侧为原图，右侧为最小生成树}}{5}{}\protected@file@percent }
\newlabel{fig:mst_example}{{1}{5}{}{figure.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}最小生成树算法介绍}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Prim算法}{5}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Prim算法}}{6}{}\protected@file@percent }
\newlabel{alg:prim}{{2}{6}{}{algorithm.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Kruskal算法}{6}{}\protected@file@percent }
\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces Kruskal算法}}{7}{}\protected@file@percent }
\newlabel{alg:kruskal}{{3}{7}{}{algorithm.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}算法实现与比较}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}算法性能提升}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.1}Prim算法的数据结构优化}{8}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Prim算法在稀疏图上的性能比较}}{8}{}\protected@file@percent }
\newlabel{fig:prim_sparse}{{2}{8}{}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Prim算法在稠密图上的性能比较}}{8}{}\protected@file@percent }
\newlabel{fig:prim_dense}{{3}{8}{}{figure.3}{}}
\citation{prim_visual}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.2}Kruskal算法的数据结构优化}{9}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Kruskal算法在稀疏图上的性能比较}}{10}{}\protected@file@percent }
\newlabel{fig:kruskal_sparse}{{4}{10}{}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Kruskal算法在稠密图上的性能比较}}{10}{}\protected@file@percent }
\newlabel{fig:kruskal_dense}{{5}{10}{}{figure.5}{}}
\citation{cache_locality}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}算法适用场景分析}{11}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces 最优实现的Prim与Kruskal算法在稀疏图上的性能比较}}{12}{}\protected@file@percent }
\newlabel{fig:optimal_sparse}{{6}{12}{}{figure.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces 最优实现的Prim与Kruskal算法在稠密图上的性能比较}}{12}{}\protected@file@percent }
\newlabel{fig:optimal_dense}{{7}{12}{}{figure.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces 最优实现的Prim与Kruskal算法性能比值}}{13}{}\protected@file@percent }
\newlabel{fig:optimal_dense}{{8}{13}{}{figure.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces 最优实现的Prim与Kruskal算法在稠密图上的性能比较}}{14}{}\protected@file@percent }
\newlabel{fig:optimal_dense}{{9}{14}{}{figure.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces 最优实现的Prim与Kruskal算法性能比值}}{14}{}\protected@file@percent }
\newlabel{fig:optimal_dense}{{10}{14}{}{figure.10}{}}
\citation{cormen}
\citation{sedgewick}
\citation{cache_locality}
\@writefile{toc}{\contentsline {section}{\numberline {5}结论}{15}{}\protected@file@percent }
\citation{cache_locality}
\bibcite{ctex}{1}
\bibcite{cormen}{2}
\bibcite{skiena}{3}
\bibcite{sedgewick}{4}
\bibcite{boost}{5}
\bibcite{cpp}{6}
\bibcite{mst_wiki}{7}
\bibcite{prim_visual}{8}
\bibcite{cache_locality}{9}
\gdef \@abspage@last{18}
